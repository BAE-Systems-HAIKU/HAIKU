{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HAIKU (Hybrid AI Integrating Koopman Units) Overview As part of the AI-assisted Climate Tipping Point Modeling (ACTM) program through DARPA, the HAIKU's Climate Model augmentation and analyses (Figure 1) works to develop more accurate predictions of Climate Tipping-Points and their underlying causes. This approach makes use of Koopman Operator Theory. Koopman based models are able to represent complex dynamics with similar fidelity to much larger models with drastic improvements to speed while providing some intrinsic explainability. This approach enables analyses that allow us to identify causal relations between factors of interest in climate systems as well as to point to additional data or interventions that may mitigate undesired climate effects. Figure 1 summarizes the approach. Figure 1: HAIKU Architecture. HAIKU augments conventional climate models with the Hybrid Koopman Climate Model (HKCM) by learning previously umodeled dynamics of error between simulated data and measurements. The Fast Koopman Proxy Model (FKPM) is a learned fully Koopman based proxy model that enables causal analyses and experimentation by this speed-up. Finally, a graphical causal model allows users to visualize and interact with the FKPM and better understand the origin of tipping points and uncertainty in the model. Problem of Interest: Sea Ice Levels in the Arctic The recent decline in Arctic sea-ice coverage, thickness and volume has been dramatic, with the September sea-ice extent declining by about 40% during the past 40 years 1 and sea-ice volume by about 70% over the same time period 2 . Some projections indicate the Arctic climate system will approach the tipping point of an irreversible catastrophic ice-sheet disintegration, sea-level rise, and the disappearance of the perennial sea ice within this century. This tipping point primarily results from Arctic amplification which is believed to be driven by soaring anthropogenic forcing and associated positive feedback loops. Whereas conventional climate models enable impressive gains in understanding and forecasting, they suffer from several shortcomings. Most notably, these include complex physics that are difficult to represent, large computation requirements, and limited explanatory power for emergent behavior, such as tipping points. In the Arctic case, the global climate model (GCM) we propose to use, the Community Earth Science Model (CESM2), requires about 6 hours of a supercomputing cluster per simulated year. Moreover, conventional climate models have limitations with some examples being surface albedo 3 , sensitivity of ice loss to warming 4 , cloud fraction 5 , and cloud radiative forcing 6 . Focusing on one example \u2013 limitation of sensitivity to ice loss warming: with current models of sea ice concentration in the Arctic is that in data, we see a very strong coupling between ocean temperature and sea ice level. But the current climate models are only able to represent this coupling at a much weaker level and generally require much greater temperature increases than observed to generate the observed level of sea ice loss 4 . A model that is able to represent this observed coupling and explain what physics interactions are missed by the current models would be a boon to the field. Additionally, sea ice volume cannot be monitored continuously; it is a challenge to record these measurements in such a remote location. If we are able to assess the value of acquiring new measurements in specific locations at specific times that will have an outsized impact on generating accurate models and predictions, we may be able to improve current models and better quantify and mitigate catastrophic sea ice disintegration in the Arctic. More details about the Global Climate Model and associated data can be found in the Data and Climate Models section alongside the plans for their use in HAIKU. Koopman Modeling The Koopman evolution equation, \u03a8 (t+1) = K \u03a8 (t), is the closed-form climate dynamics equation we use. In a controlled climate system, we describe the evolution of climate states or observables as x (t+1)=F 1 ( x (t), u (t),\u03b8) where t is the time index, x is the climate model state vector, u , is the vector representing climate forcing, and \u03b8 is the vector representing strength of climate interactions. We apply a lifting function to go from the states or observables known to current climate models into a set of collective observables that the Koopman operator can operate on: \u03a8 (t+1)=A(\u03b8) \u03a8 (t)+B(\u03b8) u (t). More details of Koopman Operator Theory and its application to HAIKU can be found int the Koopman Assisted Climate Models section . References 1 \u201cArctic Sea Ice Minimum.\u201d NASA Global Climate Change. (https://climate.nasa.gov/vital-signs/arctic-sea-ice/) accessed 10/09/2021. 2 \u201cPIOMAS Arctic Sea Ice Volume Reanalysis.\u201d Polar Science Center. (http://psc.apl.uw.edu/research/projects/arctic-sea-ice-volume-anomaly/) accessed 10/09/2021. 3 Karlsson, J., and Svensson, G. (2013), Consequences of poor representation of Arctic sea-ice albedo and cloud-radiation interactions in the CMIP5 model ensemble, Geophys. Res. Lett., 40, 4374\u2013 4379, doi:10.1002/grl.50768. 4 Rosenblum, E., and I. Eisenman, 2016: Faster Arctic sea ice retreat in CMIP5 than in CMIP3 due to volcanoes. J. Climate, 29, 9179\u20139188, doi:10.1175/JCLI-D-16-0391.1. 5 Taylor, P. C., Boeke, R. C., Li, Y., and Thompson, D. W. J. Arctic cloud annual cycle biases in climate models. Atmos. Chem. Phys., 19, 8759\u20138782, 2019 https://doi.org/10.5194/acp-19-8759-2019 6 English, J. M., Gettelman, A., and Henderson, G.R. Arctic radiative fluxes: Present-day biases and future projections in CMIP5 models, J. Clim., 28(15), 6019\u2013 6038, doi:10.1175/jcli-d-14-00801.1.","title":"HAIKU (Hybrid AI Integrating Koopman Units)"},{"location":"#haiku-hybrid-ai-integrating-koopman-units","text":"","title":"HAIKU (Hybrid AI Integrating Koopman Units)"},{"location":"#overview","text":"As part of the AI-assisted Climate Tipping Point Modeling (ACTM) program through DARPA, the HAIKU's Climate Model augmentation and analyses (Figure 1) works to develop more accurate predictions of Climate Tipping-Points and their underlying causes. This approach makes use of Koopman Operator Theory. Koopman based models are able to represent complex dynamics with similar fidelity to much larger models with drastic improvements to speed while providing some intrinsic explainability. This approach enables analyses that allow us to identify causal relations between factors of interest in climate systems as well as to point to additional data or interventions that may mitigate undesired climate effects. Figure 1 summarizes the approach. Figure 1: HAIKU Architecture. HAIKU augments conventional climate models with the Hybrid Koopman Climate Model (HKCM) by learning previously umodeled dynamics of error between simulated data and measurements. The Fast Koopman Proxy Model (FKPM) is a learned fully Koopman based proxy model that enables causal analyses and experimentation by this speed-up. Finally, a graphical causal model allows users to visualize and interact with the FKPM and better understand the origin of tipping points and uncertainty in the model.","title":"Overview"},{"location":"#problem-of-interest-sea-ice-levels-in-the-arctic","text":"The recent decline in Arctic sea-ice coverage, thickness and volume has been dramatic, with the September sea-ice extent declining by about 40% during the past 40 years 1 and sea-ice volume by about 70% over the same time period 2 . Some projections indicate the Arctic climate system will approach the tipping point of an irreversible catastrophic ice-sheet disintegration, sea-level rise, and the disappearance of the perennial sea ice within this century. This tipping point primarily results from Arctic amplification which is believed to be driven by soaring anthropogenic forcing and associated positive feedback loops. Whereas conventional climate models enable impressive gains in understanding and forecasting, they suffer from several shortcomings. Most notably, these include complex physics that are difficult to represent, large computation requirements, and limited explanatory power for emergent behavior, such as tipping points. In the Arctic case, the global climate model (GCM) we propose to use, the Community Earth Science Model (CESM2), requires about 6 hours of a supercomputing cluster per simulated year. Moreover, conventional climate models have limitations with some examples being surface albedo 3 , sensitivity of ice loss to warming 4 , cloud fraction 5 , and cloud radiative forcing 6 . Focusing on one example \u2013 limitation of sensitivity to ice loss warming: with current models of sea ice concentration in the Arctic is that in data, we see a very strong coupling between ocean temperature and sea ice level. But the current climate models are only able to represent this coupling at a much weaker level and generally require much greater temperature increases than observed to generate the observed level of sea ice loss 4 . A model that is able to represent this observed coupling and explain what physics interactions are missed by the current models would be a boon to the field. Additionally, sea ice volume cannot be monitored continuously; it is a challenge to record these measurements in such a remote location. If we are able to assess the value of acquiring new measurements in specific locations at specific times that will have an outsized impact on generating accurate models and predictions, we may be able to improve current models and better quantify and mitigate catastrophic sea ice disintegration in the Arctic. More details about the Global Climate Model and associated data can be found in the Data and Climate Models section alongside the plans for their use in HAIKU.","title":"Problem of Interest: Sea Ice Levels in the Arctic"},{"location":"#koopman-modeling","text":"The Koopman evolution equation, \u03a8 (t+1) = K \u03a8 (t), is the closed-form climate dynamics equation we use. In a controlled climate system, we describe the evolution of climate states or observables as x (t+1)=F 1 ( x (t), u (t),\u03b8) where t is the time index, x is the climate model state vector, u , is the vector representing climate forcing, and \u03b8 is the vector representing strength of climate interactions. We apply a lifting function to go from the states or observables known to current climate models into a set of collective observables that the Koopman operator can operate on: \u03a8 (t+1)=A(\u03b8) \u03a8 (t)+B(\u03b8) u (t). More details of Koopman Operator Theory and its application to HAIKU can be found int the Koopman Assisted Climate Models section .","title":"Koopman Modeling"},{"location":"#references","text":"1 \u201cArctic Sea Ice Minimum.\u201d NASA Global Climate Change. (https://climate.nasa.gov/vital-signs/arctic-sea-ice/) accessed 10/09/2021. 2 \u201cPIOMAS Arctic Sea Ice Volume Reanalysis.\u201d Polar Science Center. (http://psc.apl.uw.edu/research/projects/arctic-sea-ice-volume-anomaly/) accessed 10/09/2021. 3 Karlsson, J., and Svensson, G. (2013), Consequences of poor representation of Arctic sea-ice albedo and cloud-radiation interactions in the CMIP5 model ensemble, Geophys. Res. Lett., 40, 4374\u2013 4379, doi:10.1002/grl.50768. 4 Rosenblum, E., and I. Eisenman, 2016: Faster Arctic sea ice retreat in CMIP5 than in CMIP3 due to volcanoes. J. Climate, 29, 9179\u20139188, doi:10.1175/JCLI-D-16-0391.1. 5 Taylor, P. C., Boeke, R. C., Li, Y., and Thompson, D. W. J. Arctic cloud annual cycle biases in climate models. Atmos. Chem. Phys., 19, 8759\u20138782, 2019 https://doi.org/10.5194/acp-19-8759-2019 6 English, J. M., Gettelman, A., and Henderson, G.R. Arctic radiative fluxes: Present-day biases and future projections in CMIP5 models, J. Clim., 28(15), 6019\u2013 6038, doi:10.1175/jcli-d-14-00801.1.","title":"References"},{"location":"about/","text":"DARPA's ACTM program The DARPA AI-assisted Climate Tipping-point Modeling ( ACTM ) 1 program explores the use of third-wave AI methods to enhance the complex interconnected processes modeling climate change. The main goal is to develop hybrid AI models that combine Artificial Intelligence/Machine Learning (AI/ML) models with conventional physics models of the climate and earth systems that capture missing physical, chemical, or biological processes and identify causal factors with sufficient computational efficiency to explore decadal scale effects and characterize tipping points and bifurcations in these systems. The secondary goal is to develop new methods to assimilate diverse data into models and estimate \"value of new data\" to enhance confidence in target-specific forecasts relative to state-of-the-art techniques. HAIKU Team BAE Systems 2 and AIMdyn, Inc . 3 continue their fruitful collaboration applying Koopman to diverse DoD problems (Gamebreaker, COMBAT, and DITTO). Dr. Michael Planer (BAE Systems) is Principal Investigator, leveraging experience in physical and AI systems. Dr. Maria Fonoberova and Prof. Igor Mezic (AIMdyn) contribute Koopman\u2010based innovations. Prof. Qinghua Ding 4 (AIMdyn) is a climate expert, significantly advancing understanding of the relative contributions of internal and external forcing in Arctic climate variability. 1 Elliott, Joshua. \"AI-assisted Climate Tipping-point Modeling (ACTM).\" DARPA , https://www.darpa.mil/program/ai-assisted-climate-tipping-point-modeling 2 Fast Labs. \"Intelligent Autonomous Systems R&D.\" BAE Systems , https://www.baesystems.com/en/product/autonomy-r-d 3 AIMdyn , https://aimdyn.com/ 4 Ding, Qinghua. UCSB , https://www.geog.ucsb.edu/people/faculty/qinghua-ding","title":"About"},{"location":"about/#darpas-actm-program","text":"The DARPA AI-assisted Climate Tipping-point Modeling ( ACTM ) 1 program explores the use of third-wave AI methods to enhance the complex interconnected processes modeling climate change. The main goal is to develop hybrid AI models that combine Artificial Intelligence/Machine Learning (AI/ML) models with conventional physics models of the climate and earth systems that capture missing physical, chemical, or biological processes and identify causal factors with sufficient computational efficiency to explore decadal scale effects and characterize tipping points and bifurcations in these systems. The secondary goal is to develop new methods to assimilate diverse data into models and estimate \"value of new data\" to enhance confidence in target-specific forecasts relative to state-of-the-art techniques.","title":"DARPA's ACTM program"},{"location":"about/#haiku-team","text":"BAE Systems 2 and AIMdyn, Inc . 3 continue their fruitful collaboration applying Koopman to diverse DoD problems (Gamebreaker, COMBAT, and DITTO). Dr. Michael Planer (BAE Systems) is Principal Investigator, leveraging experience in physical and AI systems. Dr. Maria Fonoberova and Prof. Igor Mezic (AIMdyn) contribute Koopman\u2010based innovations. Prof. Qinghua Ding 4 (AIMdyn) is a climate expert, significantly advancing understanding of the relative contributions of internal and external forcing in Arctic climate variability. 1 Elliott, Joshua. \"AI-assisted Climate Tipping-point Modeling (ACTM).\" DARPA , https://www.darpa.mil/program/ai-assisted-climate-tipping-point-modeling 2 Fast Labs. \"Intelligent Autonomous Systems R&D.\" BAE Systems , https://www.baesystems.com/en/product/autonomy-r-d 3 AIMdyn , https://aimdyn.com/ 4 Ding, Qinghua. UCSB , https://www.geog.ucsb.edu/people/faculty/qinghua-ding","title":"HAIKU Team"},{"location":"analyses/","text":"Analysis Toolkit Our extensible toolkit leverages data from the fast counterfactual simulation of the FKPM (Figure 1). We highlight several planned analyses below, but envision the set of analyses growing to meet the needs of our key analytic questions. FKPM provides the computational engine enabling the analyses, and we leverage HKCM as a validation tool. These components are still in development and will be expanded upon as the implementation is finalized. Figure 1: HAIKU includes an extensible analysis toolkit that leverages the FKPM to run millions of What-Ifs in support of explanatory, exploratory, and quantitative analyses. Semantic Graph Builder The Semantic Graph Builder will build a causal network of key causal factors impacting forecasts, augmenting the set of model factors with user-defined factors computable from the model (e.g., annual variation in sea ice concentration). The FKPM will generate many time series of these factors. We plan to leverage Granger Graphs to apply Granger causality to every pair of factors. This captures the causality between factors given the generated time series. This summary of the climate model will improve understanding by showing predictions and connections in terms of the variables that are most meaningful. Figure 2: Illustration of the Semantic Graph generation which provides a human interpretable representation of climate dynamics in a compact causal graph. The model will be built out by initially calling on the FKPM to generate a large bank of time series for all outputs of interest. This data is then processed by a semi-automated variable transformation which aims to reduce the gridding of the input data to something both meaningful and manageable to a human operator. We anticipate this being mainly manually defined to begin with (eg. spatial averaging over seas, spatial averaging over length scale of interest, etc.). We then compute pairwise Granger causality between variables and leverage LASSO to limit the number of edges and remove edges explained by other pathways. Similarly, we allow for some physics/expert based constraints on causality (eg. spatial proximity requirements). We also envision that the definition of causal variables and discovery of causation between them may be beneficial as a feedback mechanism to tune the parameters of the FKPM itself. Specifically, we may identify regions which could be grouped together in the lifting or eigenfunctions of the FKPM to reduce complexity while maintaining causal prediction power. We anticipate this tool being useful for exploration and understanding of why climate models or climate data behaves as it does. One can quickly vet new models to make sure that the causality present in the Semantic Graph Builder follows physics. Similarly, one can compare a causal model generated from FKPM based on a climate model (CESM) to one on observational data directly to identify potential differences between the two at a high level. Tipping Point Analysis The Tipping Analysis identifies regions of input space where significant, qualitative differences occur in model prediction under small changes in inputs. HAIKU will exploit the linearity of the Koopman Operator to utilize classical results from dynamical systems and control theory, specifically through the eigendecomposition. The eigenvalues identify unstable modes through the sign of the real part. Tipping point analysis uses this eigendecomposition in three separate ways to 1) characterize initial conditions that excite runaway behavior; 2) locate changes in model parameters that introduce new unstable modes; or 3) identify points in time that a control, bounded in magnitude, cannot be designed to counteract an unstable mode. When identifying changes in model parameters or initial conditions that incite runaway behavior, we plan to vary the control values and monitor the change in variables of interest where we may see a tipping point. We can leverage a shooting method (Figure 3) alongside the speed of the FKPM to quickly sample variable space and identify under what conditions tipping points occur and can be mitigated. Figure 3: The shooting method reduces boundary value problems to initial value problems. By modifying a control parameter and running the FKPM forward, we can home in on the boundary value where a tipping point occurs The possible output of such a shooting method can be seen in Figure 4. Figure 4: In this case, we find that the overall sea ice concentration can be modified through certain controls and we can identify values that lead to irrecoverable sea ice loss. Through the use of multiple FKPM trained with appropriate input noise or on different data subsets, we can estimate the uncertainty on both magnitude and timing for when a tipping point will occur using a similar approach. Explainer Explainer augments projection models with traceback information to identify key drivers of quantities of interest in the Semantic Graph. For example, if a projection shows sea ice concentration decreasing, Explainer identifies the pathways through the graph that accounts for that change. Explainer adds interpretability both to \u2018baseline\u2019 model projection as well as What-if runs. The functional details of what will be available in the HAIKU system will be investigated as it is further built out. This is viewed as an optional component as this information can be viewed directly by interrogating the causal model itself. We intend to keep the model at a manageable size so this function is likely not needed directly. Value of New Data Estimator (VoNDE) The Value of New Data Estimator will estimate the value of new data and help identify where to focus resources for data collection. To improve accuracy of climate forecasts and tipping point estimates, HAIKU assesses how new data will contribute to new, previously unseen model parameters or reduces the uncertainly of target specific downstream effects. Either case indicates the new data are valuable.","title":"Analysis Toolkit"},{"location":"analyses/#analysis-toolkit","text":"Our extensible toolkit leverages data from the fast counterfactual simulation of the FKPM (Figure 1). We highlight several planned analyses below, but envision the set of analyses growing to meet the needs of our key analytic questions. FKPM provides the computational engine enabling the analyses, and we leverage HKCM as a validation tool. These components are still in development and will be expanded upon as the implementation is finalized. Figure 1: HAIKU includes an extensible analysis toolkit that leverages the FKPM to run millions of What-Ifs in support of explanatory, exploratory, and quantitative analyses.","title":"Analysis Toolkit"},{"location":"analyses/#semantic-graph-builder","text":"The Semantic Graph Builder will build a causal network of key causal factors impacting forecasts, augmenting the set of model factors with user-defined factors computable from the model (e.g., annual variation in sea ice concentration). The FKPM will generate many time series of these factors. We plan to leverage Granger Graphs to apply Granger causality to every pair of factors. This captures the causality between factors given the generated time series. This summary of the climate model will improve understanding by showing predictions and connections in terms of the variables that are most meaningful. Figure 2: Illustration of the Semantic Graph generation which provides a human interpretable representation of climate dynamics in a compact causal graph. The model will be built out by initially calling on the FKPM to generate a large bank of time series for all outputs of interest. This data is then processed by a semi-automated variable transformation which aims to reduce the gridding of the input data to something both meaningful and manageable to a human operator. We anticipate this being mainly manually defined to begin with (eg. spatial averaging over seas, spatial averaging over length scale of interest, etc.). We then compute pairwise Granger causality between variables and leverage LASSO to limit the number of edges and remove edges explained by other pathways. Similarly, we allow for some physics/expert based constraints on causality (eg. spatial proximity requirements). We also envision that the definition of causal variables and discovery of causation between them may be beneficial as a feedback mechanism to tune the parameters of the FKPM itself. Specifically, we may identify regions which could be grouped together in the lifting or eigenfunctions of the FKPM to reduce complexity while maintaining causal prediction power. We anticipate this tool being useful for exploration and understanding of why climate models or climate data behaves as it does. One can quickly vet new models to make sure that the causality present in the Semantic Graph Builder follows physics. Similarly, one can compare a causal model generated from FKPM based on a climate model (CESM) to one on observational data directly to identify potential differences between the two at a high level.","title":"Semantic Graph Builder"},{"location":"analyses/#tipping-point-analysis","text":"The Tipping Analysis identifies regions of input space where significant, qualitative differences occur in model prediction under small changes in inputs. HAIKU will exploit the linearity of the Koopman Operator to utilize classical results from dynamical systems and control theory, specifically through the eigendecomposition. The eigenvalues identify unstable modes through the sign of the real part. Tipping point analysis uses this eigendecomposition in three separate ways to 1) characterize initial conditions that excite runaway behavior; 2) locate changes in model parameters that introduce new unstable modes; or 3) identify points in time that a control, bounded in magnitude, cannot be designed to counteract an unstable mode. When identifying changes in model parameters or initial conditions that incite runaway behavior, we plan to vary the control values and monitor the change in variables of interest where we may see a tipping point. We can leverage a shooting method (Figure 3) alongside the speed of the FKPM to quickly sample variable space and identify under what conditions tipping points occur and can be mitigated. Figure 3: The shooting method reduces boundary value problems to initial value problems. By modifying a control parameter and running the FKPM forward, we can home in on the boundary value where a tipping point occurs The possible output of such a shooting method can be seen in Figure 4. Figure 4: In this case, we find that the overall sea ice concentration can be modified through certain controls and we can identify values that lead to irrecoverable sea ice loss. Through the use of multiple FKPM trained with appropriate input noise or on different data subsets, we can estimate the uncertainty on both magnitude and timing for when a tipping point will occur using a similar approach.","title":"Tipping Point Analysis"},{"location":"analyses/#explainer","text":"Explainer augments projection models with traceback information to identify key drivers of quantities of interest in the Semantic Graph. For example, if a projection shows sea ice concentration decreasing, Explainer identifies the pathways through the graph that accounts for that change. Explainer adds interpretability both to \u2018baseline\u2019 model projection as well as What-if runs. The functional details of what will be available in the HAIKU system will be investigated as it is further built out. This is viewed as an optional component as this information can be viewed directly by interrogating the causal model itself. We intend to keep the model at a manageable size so this function is likely not needed directly.","title":"Explainer"},{"location":"analyses/#value-of-new-data-estimator-vonde","text":"The Value of New Data Estimator will estimate the value of new data and help identify where to focus resources for data collection. To improve accuracy of climate forecasts and tipping point estimates, HAIKU assesses how new data will contribute to new, previously unseen model parameters or reduces the uncertainly of target specific downstream effects. Either case indicates the new data are valuable.","title":"Value of New Data Estimator (VoNDE)"},{"location":"data_models/","text":"Data and Climate models The HAIKU program will focus on analyzing decade-scale predictions of Arctic sea ice concentrations. We plan to initially use the pre-generated data across a variety of CICE4 parameters to initially construct the HAIKU models, but expect to need to run the CICE4 model eventually before transitioning to the full CESM model. We also plan to leverage real measurement data to train our Hybrid Koopman-Climate Model which will learn to model dynamics present in real data that is not present in the models and their associated pre-generated data. To enable rapid early results and validate our approach, we begin with a stand-alone sea ice model: the Los Alamos sea ice model CICE4 and associated documentation . At the midpoint of Phase 1, we plan to move to the full Community Earth System Model (CESM2) to better model the coupled climate variability. CESM2 integrates CICE5 along with atmosphere (CAM6), ocean (POP2), land (CLM5), and ice sheet (CISM2) models of the NCAR modeling framework. Initial Climate Models and Datasets The CICE5 model requires atmospheric data, including: monthly downward shortwave radiation data at the surface, precipitation, cloud fraction, and four times daily data of 2m air temperature, 2m specific humidity, 10m wind, and 10m air density. Most of the atmospheric data will be derived from the ERA5 reanalysis accessible via the ECWMF data portal ( ERA5 ). The CICE5 model also requires oceanic data, including: monthly sea surface temperature, sea surface salinity, sea surface height, mixed layer depth, and ocean currents. The oceanic forcing will come from several indicators available at the ECMWF Ocean Reanalysis System 5 ( ORAS5 via ECWMF ). In addition, the CICE5 model requires data for vertical heat transport from the deep ocean, obtainable as CESM model output available via NCAR climate data gateway . The first step is to confirm sensitivity observations concluded by the climatology community. Before investigative sensitivity, we will first need to find a correspondence between model outputs and observational data for validation. Observational data for sea ice concentration can be obtained from the National Snow and Ice Data Center (NSIDC). We will need to work in a common projection and resolution to avoid interpolation. Model Prediction - CESM Large Ensemble Project The models are computationally expensive to run. Instead, we look at the CESM Large Ensemble Community Project. This project has produced a publicly available set of climate model simulations performed with the nominal 1-degree latitude/longitude version of the Community Earth System Model version 1 (CESM1) with CAM5.2 as its atmospheric component CESM data . Figure 1: Sea ice concentration percentage in the northern hemisphere generated from the CESM Large Ensemble Community Project. The data is shown in longitude-latitude coordinates. Observational Data - NSIDC Sea Ice Concentrations from Nimbus-7 SMMR and DMSP SSM/I-SSMIS Passive Microwave Data, Version 1 | National Snow and Ice Data Center (nsidc.org) We compare the results of the simulations with observational sea ice concentration data obtained from the National Snow and Ice Data Center. These data include gridded daily (every other day for SMMR data) and monthly averaged sea ice concentrations for both the north and south polar regions. The dataset includes data since 26 October 1978. The data shows the brightness temperature data derived from a few different sensors (microwave radiometers that sense emitted microwave radiation) that represent the sea ice concentration. The data are provided in the polar stereographic projection at a grid cell size of 25 x 25 km. For grid cell sizes of 25 x 25km, the pixel intensities represent the fractional amount of sea ice covering that cell (scaled by 250). Figure 2: Sea ice concentrations in the northern and southern hemisphere from satellite data obtained from NSIDC. The data is shown in a polar projection and 250 on the color scale corresponds to 100% coverage. Dataset Access Instructions to download and preprocess datasets currently in use on HAIKU can be found on the HAIKU github . This page will continue to be updated as the HAIKU code is built out, validated, and approved for public use and will contain instructions to get HAIKU operational on your system.","title":"Data and Climate models"},{"location":"data_models/#data-and-climate-models","text":"The HAIKU program will focus on analyzing decade-scale predictions of Arctic sea ice concentrations. We plan to initially use the pre-generated data across a variety of CICE4 parameters to initially construct the HAIKU models, but expect to need to run the CICE4 model eventually before transitioning to the full CESM model. We also plan to leverage real measurement data to train our Hybrid Koopman-Climate Model which will learn to model dynamics present in real data that is not present in the models and their associated pre-generated data. To enable rapid early results and validate our approach, we begin with a stand-alone sea ice model: the Los Alamos sea ice model CICE4 and associated documentation . At the midpoint of Phase 1, we plan to move to the full Community Earth System Model (CESM2) to better model the coupled climate variability. CESM2 integrates CICE5 along with atmosphere (CAM6), ocean (POP2), land (CLM5), and ice sheet (CISM2) models of the NCAR modeling framework.","title":"Data and Climate models"},{"location":"data_models/#initial-climate-models-and-datasets","text":"The CICE5 model requires atmospheric data, including: monthly downward shortwave radiation data at the surface, precipitation, cloud fraction, and four times daily data of 2m air temperature, 2m specific humidity, 10m wind, and 10m air density. Most of the atmospheric data will be derived from the ERA5 reanalysis accessible via the ECWMF data portal ( ERA5 ). The CICE5 model also requires oceanic data, including: monthly sea surface temperature, sea surface salinity, sea surface height, mixed layer depth, and ocean currents. The oceanic forcing will come from several indicators available at the ECMWF Ocean Reanalysis System 5 ( ORAS5 via ECWMF ). In addition, the CICE5 model requires data for vertical heat transport from the deep ocean, obtainable as CESM model output available via NCAR climate data gateway . The first step is to confirm sensitivity observations concluded by the climatology community. Before investigative sensitivity, we will first need to find a correspondence between model outputs and observational data for validation. Observational data for sea ice concentration can be obtained from the National Snow and Ice Data Center (NSIDC). We will need to work in a common projection and resolution to avoid interpolation.","title":"Initial Climate Models and Datasets"},{"location":"data_models/#model-prediction-cesm-large-ensemble-project","text":"The models are computationally expensive to run. Instead, we look at the CESM Large Ensemble Community Project. This project has produced a publicly available set of climate model simulations performed with the nominal 1-degree latitude/longitude version of the Community Earth System Model version 1 (CESM1) with CAM5.2 as its atmospheric component CESM data . Figure 1: Sea ice concentration percentage in the northern hemisphere generated from the CESM Large Ensemble Community Project. The data is shown in longitude-latitude coordinates.","title":"Model Prediction - CESM Large Ensemble Project"},{"location":"data_models/#observational-data-nsidc","text":"Sea Ice Concentrations from Nimbus-7 SMMR and DMSP SSM/I-SSMIS Passive Microwave Data, Version 1 | National Snow and Ice Data Center (nsidc.org) We compare the results of the simulations with observational sea ice concentration data obtained from the National Snow and Ice Data Center. These data include gridded daily (every other day for SMMR data) and monthly averaged sea ice concentrations for both the north and south polar regions. The dataset includes data since 26 October 1978. The data shows the brightness temperature data derived from a few different sensors (microwave radiometers that sense emitted microwave radiation) that represent the sea ice concentration. The data are provided in the polar stereographic projection at a grid cell size of 25 x 25 km. For grid cell sizes of 25 x 25km, the pixel intensities represent the fractional amount of sea ice covering that cell (scaled by 250). Figure 2: Sea ice concentrations in the northern and southern hemisphere from satellite data obtained from NSIDC. The data is shown in a polar projection and 250 on the color scale corresponds to 100% coverage.","title":"Observational Data - NSIDC"},{"location":"data_models/#dataset-access","text":"Instructions to download and preprocess datasets currently in use on HAIKU can be found on the HAIKU github . This page will continue to be updated as the HAIKU code is built out, validated, and approved for public use and will contain instructions to get HAIKU operational on your system.","title":"Dataset Access"},{"location":"koopman/","text":"Koopman Assisted Climate Models The Hybrid AI Koopman-Climate Model (HKCM) aims to augment the ability of current climate models (CICE5 to start) to more accurately model real world measurements by training a Koopman model in series with the climate model to apply missing dynamics at each time step. But from the programmatic level, we have two other components which should fall under this category as well, the Fast Koopman Proxy Model (FKPM) and our Analysis Toolkit. These work together leveraging a Koopman proxy model of the full climate system that can be trained and run in minutes instead of days. This enables our analysis toolkit and allows users to quickly test hypothesis and automatically determine uncertainty on forecasts as well as driving causal factors and potential interventions to avoid tipping points. Across both the HKCM and the FKPM, we will map from the inputs described in Section 3 into Koopman observables space and back. We will also specify the mapping between model parameters (or Koopman observables) and variables of interest described in the same section. By leveraging pregenerated data from the models of interest, we reduce the initial computational cost considerably, while hopefully maintaining sufficient diversity of model parameters to properly train the Koopman operators. Once we\u2019ve validated this approach, we will revisit running the full climate models with specific parameter values as necessary to explore potential tipping points and causal factors. The FKPM and mapping to factors of interest are required for us to present an understandable result and allow for expert interaction through the Analysis Toolkit, which consists of a semantic graph of those factors, an explainer that shows pathways that drive specific factors (like rapid sea ice loss), and an identification of which variables will reach a tipping point (along with further statistics of when, how, and why). More detail into Koopman Operator theory and how the various model components are constructed and serve the climate analyses of interest follow. Koopman Operator Theory Figure 1: Koopman models the dynamics of a reference system (1). Koopman transforms (2) the state space into an observable space and learns a linear operator (3) in the observable space. Various Koopman publications 1,2,3 contain more details. The Koopman Operator (Figure 1) represents the dynamics of a nonlinear, complex, and uncertain system with an infinite-dimensional space (called \u201cobservable space\u201d) that evolves under a linear operator. The lifting function that maps the system into observable space can incorporate prior knowledge, resulting in an abstracted, but understandable representation of the system. The Koopman operator-based compressed linear form enables extremely rapid simulations to explore numerous what-if scenarios and generate data for causal discovery of semantic causal factors. Moreover, specific eigenmodes of the system describe its long run behavior and can be used directly for tipping point analysis. Compared to other data-driven approaches (e.g., neural networks), the Koopman operator extrapolates well. Even though it preserves complex non-linear dynamics, it is linear in observable space and is explainable because the operator can be expressed algebraically relating variables of interest, like ice cover. Additionally, the Koopman operator-based model learns on sparse data. The Koopman evolution equation, \u03a8 (t+1) = K \u03a8 (t), is the closed-form climate dynamics equation we use. In a controlled climate system, we describe the evolution of climate states or observables as x (t+1)=F 1 ( x (t), u (t),\u03b8) where t is the time index, x is the climate model state vector, u , is the vector representing climate forcing, and \u03b8 is the vector representing strength of climate interactions. We apply a lifting function to go from the states or observables known to current climate models into a set of collective observables on which the Koopman operator can act: \u03a8 (t+1)=A(\u03b8) \u03a8 (t)+B(\u03b8) u (t). Hybrid AI Koopman-Climate Model (HKCM) We plan to train a Koopman operator-based model to learn the dynamics of the difference between the predictions from current climate models and the actual measured records at each measured time step. This has the potential to identify physics that may be important to the quantification of tipping points or runaway sea-ice loss (Figure 2). Figure 2: Hybrid AI Koopman-Climate Model (HKCM)\u2014The Koopman Operator will predict the dynamics of the system given climate model output for the current step and the estimate of observables from the previous one. HKCM leverages modeled physics in the climate model while accounting for un-modeled physics. By placing the Koopman model in series with the Climate Model, it learns the dynamics of any missing physics and to account for any mismodeled physics. The details of which modes are excited in this Koopman model can be used to trace back to the original climate level variables and help identify which physics properties have been mismodeled. Our initial goal is to verify that the HKCM can learn the missing dynamics in sea ice concentration and to investigate the relevant modes to potentially determine the missing physics interactions in the climate model. Figure 3: Separate FKPMs can be trained to model both the climate model and the observational data. By forcing alignment of their eigenvalues, the two FKPM can be compared directly and a third FKPM can be defined from their difference. This difference can then be used to apply a correction factor directly to the climate model output to bring it in line with the observational data. A preliminary investigation (Figure 4) shows the eigenfunctions of the Mean, Annual, and selected exponential decay modes of the correction-FKPM trained on the difference between CESM1 and NSIDC sea ice concentration data. Figure 4: The resultant modes from a preliminary FKPM to apply a correction to the CESM1 model. The Berents and Kara sea are the main region of discrepancy. We find a missing exponential component with a decay time of 20 years. This is a very preliminary result and is meant simply to be illustrative of how the Koopman mode analysis of these differential models can be helpful in identifying missing physics. This correction-FKPM can likely improve the standard Climate Model's accuracy and an analysis of the FKPM's structure can help identify characteristics of the missing physics contained in the correction-FKPM. For instance, if the FKPM has 3 climate variables and we sea that no correction is needed to predict Air Temperature, but we see that the cross-term that models the impact of Air Temperature onto Sea Ice Concentration is large, then we know something is missing in the original climate model involving the how Air Temperature impacts Sea Ice Concentration. We can further look at the Eigenfunctions to identify spatial regions (perhaps this involves an east to west flow) and the eigenvalues (for what timescales is this relevant?). Fast Koopman Proxy Model (FKPM) We will also train a full Koopman model to create a fast proxy model of the full climate simulation. This will enable a suite of analytics that can extract causality and better characterize tipping points and their associated uncertainty that would take months or years to do with the current best climate models alone. This is shown below (Figure 3). Figure 3: Fast Koopman Proxy Model (FKPM)\u2014The FKPM learns the full dynamics of the HKCM or stand-alone climate model, but is able to operate much faster than the either, enabling the analytic toolkit. Analysis of the eigenfunctions and eigenvalues will help identify tipping points and regions of interest for deeper analysis. Initially, we will train a FKPM using the climate model on its own so we can begin developing the Analysis Toolkit, but as the HKCM becomes more capable, we will train an improved FKPM that leverages it as well and compare the analytics for robustness. 1 Arbabi, H., & Mezic, I. (2017). Ergodic theory, dynamic mode decomposition, and computation of spectral properties of the Koopman operator. SIAM Journal on Applied Dynamical Systems, 16(4):2096\u20132126. 2 Mezic, I. (2005). Spectral properties of dynamical systems, model reduction and decompositions. Nonlinear Dynamics, 41(1-3), 309-325. 3","title":"Koopman Assisted Climate Models"},{"location":"koopman/#koopman-assisted-climate-models","text":"The Hybrid AI Koopman-Climate Model (HKCM) aims to augment the ability of current climate models (CICE5 to start) to more accurately model real world measurements by training a Koopman model in series with the climate model to apply missing dynamics at each time step. But from the programmatic level, we have two other components which should fall under this category as well, the Fast Koopman Proxy Model (FKPM) and our Analysis Toolkit. These work together leveraging a Koopman proxy model of the full climate system that can be trained and run in minutes instead of days. This enables our analysis toolkit and allows users to quickly test hypothesis and automatically determine uncertainty on forecasts as well as driving causal factors and potential interventions to avoid tipping points. Across both the HKCM and the FKPM, we will map from the inputs described in Section 3 into Koopman observables space and back. We will also specify the mapping between model parameters (or Koopman observables) and variables of interest described in the same section. By leveraging pregenerated data from the models of interest, we reduce the initial computational cost considerably, while hopefully maintaining sufficient diversity of model parameters to properly train the Koopman operators. Once we\u2019ve validated this approach, we will revisit running the full climate models with specific parameter values as necessary to explore potential tipping points and causal factors. The FKPM and mapping to factors of interest are required for us to present an understandable result and allow for expert interaction through the Analysis Toolkit, which consists of a semantic graph of those factors, an explainer that shows pathways that drive specific factors (like rapid sea ice loss), and an identification of which variables will reach a tipping point (along with further statistics of when, how, and why). More detail into Koopman Operator theory and how the various model components are constructed and serve the climate analyses of interest follow.","title":"Koopman Assisted Climate Models"},{"location":"koopman/#koopman-operator-theory","text":"Figure 1: Koopman models the dynamics of a reference system (1). Koopman transforms (2) the state space into an observable space and learns a linear operator (3) in the observable space. Various Koopman publications 1,2,3 contain more details. The Koopman Operator (Figure 1) represents the dynamics of a nonlinear, complex, and uncertain system with an infinite-dimensional space (called \u201cobservable space\u201d) that evolves under a linear operator. The lifting function that maps the system into observable space can incorporate prior knowledge, resulting in an abstracted, but understandable representation of the system. The Koopman operator-based compressed linear form enables extremely rapid simulations to explore numerous what-if scenarios and generate data for causal discovery of semantic causal factors. Moreover, specific eigenmodes of the system describe its long run behavior and can be used directly for tipping point analysis. Compared to other data-driven approaches (e.g., neural networks), the Koopman operator extrapolates well. Even though it preserves complex non-linear dynamics, it is linear in observable space and is explainable because the operator can be expressed algebraically relating variables of interest, like ice cover. Additionally, the Koopman operator-based model learns on sparse data. The Koopman evolution equation, \u03a8 (t+1) = K \u03a8 (t), is the closed-form climate dynamics equation we use. In a controlled climate system, we describe the evolution of climate states or observables as x (t+1)=F 1 ( x (t), u (t),\u03b8) where t is the time index, x is the climate model state vector, u , is the vector representing climate forcing, and \u03b8 is the vector representing strength of climate interactions. We apply a lifting function to go from the states or observables known to current climate models into a set of collective observables on which the Koopman operator can act: \u03a8 (t+1)=A(\u03b8) \u03a8 (t)+B(\u03b8) u (t).","title":"Koopman Operator Theory"},{"location":"koopman/#hybrid-ai-koopman-climate-model-hkcm","text":"We plan to train a Koopman operator-based model to learn the dynamics of the difference between the predictions from current climate models and the actual measured records at each measured time step. This has the potential to identify physics that may be important to the quantification of tipping points or runaway sea-ice loss (Figure 2). Figure 2: Hybrid AI Koopman-Climate Model (HKCM)\u2014The Koopman Operator will predict the dynamics of the system given climate model output for the current step and the estimate of observables from the previous one. HKCM leverages modeled physics in the climate model while accounting for un-modeled physics. By placing the Koopman model in series with the Climate Model, it learns the dynamics of any missing physics and to account for any mismodeled physics. The details of which modes are excited in this Koopman model can be used to trace back to the original climate level variables and help identify which physics properties have been mismodeled. Our initial goal is to verify that the HKCM can learn the missing dynamics in sea ice concentration and to investigate the relevant modes to potentially determine the missing physics interactions in the climate model. Figure 3: Separate FKPMs can be trained to model both the climate model and the observational data. By forcing alignment of their eigenvalues, the two FKPM can be compared directly and a third FKPM can be defined from their difference. This difference can then be used to apply a correction factor directly to the climate model output to bring it in line with the observational data. A preliminary investigation (Figure 4) shows the eigenfunctions of the Mean, Annual, and selected exponential decay modes of the correction-FKPM trained on the difference between CESM1 and NSIDC sea ice concentration data. Figure 4: The resultant modes from a preliminary FKPM to apply a correction to the CESM1 model. The Berents and Kara sea are the main region of discrepancy. We find a missing exponential component with a decay time of 20 years. This is a very preliminary result and is meant simply to be illustrative of how the Koopman mode analysis of these differential models can be helpful in identifying missing physics. This correction-FKPM can likely improve the standard Climate Model's accuracy and an analysis of the FKPM's structure can help identify characteristics of the missing physics contained in the correction-FKPM. For instance, if the FKPM has 3 climate variables and we sea that no correction is needed to predict Air Temperature, but we see that the cross-term that models the impact of Air Temperature onto Sea Ice Concentration is large, then we know something is missing in the original climate model involving the how Air Temperature impacts Sea Ice Concentration. We can further look at the Eigenfunctions to identify spatial regions (perhaps this involves an east to west flow) and the eigenvalues (for what timescales is this relevant?).","title":"Hybrid AI Koopman-Climate Model (HKCM)"},{"location":"koopman/#fast-koopman-proxy-model-fkpm","text":"We will also train a full Koopman model to create a fast proxy model of the full climate simulation. This will enable a suite of analytics that can extract causality and better characterize tipping points and their associated uncertainty that would take months or years to do with the current best climate models alone. This is shown below (Figure 3). Figure 3: Fast Koopman Proxy Model (FKPM)\u2014The FKPM learns the full dynamics of the HKCM or stand-alone climate model, but is able to operate much faster than the either, enabling the analytic toolkit. Analysis of the eigenfunctions and eigenvalues will help identify tipping points and regions of interest for deeper analysis. Initially, we will train a FKPM using the climate model on its own so we can begin developing the Analysis Toolkit, but as the HKCM becomes more capable, we will train an improved FKPM that leverages it as well and compare the analytics for robustness. 1 Arbabi, H., & Mezic, I. (2017). Ergodic theory, dynamic mode decomposition, and computation of spectral properties of the Koopman operator. SIAM Journal on Applied Dynamical Systems, 16(4):2096\u20132126. 2 Mezic, I. (2005). Spectral properties of dynamical systems, model reduction and decompositions. Nonlinear Dynamics, 41(1-3), 309-325. 3","title":"Fast Koopman Proxy Model (FKPM)"},{"location":"metrics/","text":"Metrics to evaulate HAIKU capabilities In order to evaluate the utility of the HAIKU models and associated analytics compared to current climate modeling capabilities we plan to use several metrics including measuring the relative accuracy and speed of the Koopman Operator Theory based models, the accuracy/reliability of casual relationships extracted from HAIKU, and the accuracy/reliability of tipping points identified by HAIKU. Accuracy of climate projections FKPM can be trained from observational or simulated data. Initial accuracy metric will compare the relative accuracy of the FKPM (trained on observation) to Climate model's accuracy and that of the climatalogical mean. At present we compute relative error of each point at each time step for data outside of training set. Equation 1: MSE of a model across all spatial observations at a given time step. An example of this accuracy analysis in action can be seen on some preliminary results comparing forecasting from a FKPM trained only on sea ice concentration data to NSIDC data. Figure 1: A FKPM was trained on monthly NSIDC (sea ice concentration only) data from 1997-2000. The Koopman model was then run foreward to forecast monthly predictions from 2001-2004. The pointwise RMSE of the FKPM (blue), CESM1 (orange), and climatalogical mean (green) were then computed from the observed monthly NSIDC data. We plan to average over geographic and temporal step size to better quantify the utility of our models to the longer time scale climate trends as well as to mitigate the potential very small scale noise that the FKPM attempts to simulate. We plan for this metric to evolve as we continue evaluating the HAIKU system: Aggregate spatially before computing the RMSE Compare accuracy of larger scale dynamics to higher resolution Aggregate temporally (or remove annual variation directly) Main goal is to assess decadal scale trends and tipping points, we don\u2019t want model to focus on modeling annual variation when overall trend is more important Compute accuracy per variable/spatial/temporal grids Will enable Phase II ability to identify measurements to improve overall accuracy Proxy Model Speedup The ability of the FKPM to accurately model the climate system is of primary importance, but in order to provide analytics not possible with current climate models, we must also be able to train and test orders of magnitude faster than the current full physics climate simulations. To that end, we propose a metric called Proxy Model Speedup which is the fraction of the time the CESM model takes to evaluate 50 years of climate forecasting at the fidelity described in our datasets section over the time taken for the Koopman model to do the same. Equation 2: Metric to capture speedup of FKPM over standard climate models We will likely investigate variants on this metric. For instance, the Koopman model must be trained, so we may include that in the denominator. Additionally, the CESM model outputs are typically be averaged over several runs with varying initial conditions to see the decadal trends that climate scientists are interested in, so we may need to modify the numerator to account for this. All variants will be presented alongside one another and clearly defined as they become relevant. Causal Factor Discovery and Confirmation An important analytic in the HAIKU toolkit is to identify causally linked variables. Our current approach at causal discovery involves rapid what-if analyses using the FKPM to tweak potential causal variables and evaluate the change in potential effect variables. We can also identify the off-diagonal terms in the Koopman matrix to infer causality between modes. While our data is high dimensional, we can restrict potential causal links spatially and based on known physics. Once we\u2019ve identified a set of proposed causal links using granger causality in a specific set of FKPMs we then propose a further set of experiments on the original reference climate model via a counterfactual experiment. The accuracy of causal links discovered by the FKPMs is then the fraction of causal links not refuted by high-fidelity models over the total number of proposed causal links. Equation 3: Metric to capture the accuracy of the causal links predicted by the Semantic Graph Generator Where CF is 0 if a causal links disproved by counterfactual evidence or 1 if it is validated and N is the total number of proposed causal links. If we assume that the sampling of CESM model parameters enclose the true observational parameters, measuring the distribution of Causal Link Accuracies of FKPMs trained on various CESM output should provide a reasonable estimate of the Causal Link Accuracy of a FKPM trained to more precisely emulate the observational data. An additional metric to track is the total number of causal relations discovered in the climate system. This will be presented, but we do not have a target value at this point. As the program develops and we present hypothesized causal relations to climate scientists, we expect the usefulness of these causal relations may come into play, but no quantitative metrics are currently planned for this. Tipping Point Accuracy and Consistency FKPM enables what-if analyses orders of magnitude faster than traditional climate models Identify Koopman modes with exponential dynamics (likely to cause runaway behavior) Identify bifurcation by tracking the Koopman eigenvalues Leverage FKPM rapid what-if analyses to identify causal variables that experience runaway dynamics directly Given initial conditions and forcing terms, identify point in time where a bounded control is unable to counteract runaway dynamics Generating a metric to evaluate HAIKU\u2019s ability to accurately predict tipping points is perhaps the most challenging aspect of metric definition. We don\u2019t necessarily have direct observations of tipping points in our observational or simulated data. Identification of key locations and variables driving tipping points will be quantified, but cannot necessarily be verified directly. Specifically, we identify bifurcation by tracking the Koopman eigenvalues and the corresponding Koopman modes; what spatial location and which variables will experience tipping points? We then track the total number and through interactions with climate scientists, how many lead to useful insights or actions. Quantitative metrics are preferred, so we also aim to verify the accuracy of as many proposed tipping points as possible. We can quantify a stochastic (systematic) uncertainty in the tipping point by measuring the magnitude and causal thresholds that lead to the tipping point across several FKPM trained from data generated with different initial values (configurations) of the CESM. For an FKPM trained on climate simulation data, we can go back to the original simulation to verify if a tipping point is present. The FKPM allows us to sample parameter space much more rapidly and the Koopman mode analysis also allows us to identify potential areas to explore. Once we\u2019ve identified potential conditions that trigger a tipping point using our Analysis Toolkit, we return to the original simulations and verify if the predicted tipping point is present in the dynamics of the simulation. This Tipping Point accuracy is the fraction of verified tipping points over the total number of proposed tipping points. Equation 4: Metric to estimate accuracy of tipping points Where VTP (verified tipping point) is 0 if the tipping point is not verified on the current FKPM and 1 if it is. We then range over N FKPMs and over M identified tipping points. Our currently selected observational data doesn\u2019t have large scale tipping points, so as of now, this analysis is restricted to simulated dynamics. But as with our causal analysis accuracy, we expect that the capability of FKPM to model simulated climate models will be similar to its ability to model observational data. And as such, the Tipping Point Accuracy measured on simulated data should be indicative of that on observational data. Additionally, if a specific tipping point is present in several FKPMs derived across a variety of simulation parameters (high tipping point accuracy) and the accuracy of those FKPMs compared to the observational data is high (high model accuracy), we have reasonable support that this tipping point is properly modeled and is likely representative of a tipping point present in the real earth system.","title":"Metrics to evaulate HAIKU capabilities"},{"location":"metrics/#metrics-to-evaulate-haiku-capabilities","text":"In order to evaluate the utility of the HAIKU models and associated analytics compared to current climate modeling capabilities we plan to use several metrics including measuring the relative accuracy and speed of the Koopman Operator Theory based models, the accuracy/reliability of casual relationships extracted from HAIKU, and the accuracy/reliability of tipping points identified by HAIKU.","title":"Metrics to evaulate HAIKU capabilities"},{"location":"metrics/#accuracy-of-climate-projections","text":"FKPM can be trained from observational or simulated data. Initial accuracy metric will compare the relative accuracy of the FKPM (trained on observation) to Climate model's accuracy and that of the climatalogical mean. At present we compute relative error of each point at each time step for data outside of training set. Equation 1: MSE of a model across all spatial observations at a given time step. An example of this accuracy analysis in action can be seen on some preliminary results comparing forecasting from a FKPM trained only on sea ice concentration data to NSIDC data. Figure 1: A FKPM was trained on monthly NSIDC (sea ice concentration only) data from 1997-2000. The Koopman model was then run foreward to forecast monthly predictions from 2001-2004. The pointwise RMSE of the FKPM (blue), CESM1 (orange), and climatalogical mean (green) were then computed from the observed monthly NSIDC data. We plan to average over geographic and temporal step size to better quantify the utility of our models to the longer time scale climate trends as well as to mitigate the potential very small scale noise that the FKPM attempts to simulate. We plan for this metric to evolve as we continue evaluating the HAIKU system: Aggregate spatially before computing the RMSE Compare accuracy of larger scale dynamics to higher resolution Aggregate temporally (or remove annual variation directly) Main goal is to assess decadal scale trends and tipping points, we don\u2019t want model to focus on modeling annual variation when overall trend is more important Compute accuracy per variable/spatial/temporal grids Will enable Phase II ability to identify measurements to improve overall accuracy","title":"Accuracy of climate projections"},{"location":"metrics/#proxy-model-speedup","text":"The ability of the FKPM to accurately model the climate system is of primary importance, but in order to provide analytics not possible with current climate models, we must also be able to train and test orders of magnitude faster than the current full physics climate simulations. To that end, we propose a metric called Proxy Model Speedup which is the fraction of the time the CESM model takes to evaluate 50 years of climate forecasting at the fidelity described in our datasets section over the time taken for the Koopman model to do the same. Equation 2: Metric to capture speedup of FKPM over standard climate models We will likely investigate variants on this metric. For instance, the Koopman model must be trained, so we may include that in the denominator. Additionally, the CESM model outputs are typically be averaged over several runs with varying initial conditions to see the decadal trends that climate scientists are interested in, so we may need to modify the numerator to account for this. All variants will be presented alongside one another and clearly defined as they become relevant.","title":"Proxy Model Speedup"},{"location":"metrics/#causal-factor-discovery-and-confirmation","text":"An important analytic in the HAIKU toolkit is to identify causally linked variables. Our current approach at causal discovery involves rapid what-if analyses using the FKPM to tweak potential causal variables and evaluate the change in potential effect variables. We can also identify the off-diagonal terms in the Koopman matrix to infer causality between modes. While our data is high dimensional, we can restrict potential causal links spatially and based on known physics. Once we\u2019ve identified a set of proposed causal links using granger causality in a specific set of FKPMs we then propose a further set of experiments on the original reference climate model via a counterfactual experiment. The accuracy of causal links discovered by the FKPMs is then the fraction of causal links not refuted by high-fidelity models over the total number of proposed causal links. Equation 3: Metric to capture the accuracy of the causal links predicted by the Semantic Graph Generator Where CF is 0 if a causal links disproved by counterfactual evidence or 1 if it is validated and N is the total number of proposed causal links. If we assume that the sampling of CESM model parameters enclose the true observational parameters, measuring the distribution of Causal Link Accuracies of FKPMs trained on various CESM output should provide a reasonable estimate of the Causal Link Accuracy of a FKPM trained to more precisely emulate the observational data. An additional metric to track is the total number of causal relations discovered in the climate system. This will be presented, but we do not have a target value at this point. As the program develops and we present hypothesized causal relations to climate scientists, we expect the usefulness of these causal relations may come into play, but no quantitative metrics are currently planned for this.","title":"Causal Factor Discovery and Confirmation"},{"location":"metrics/#tipping-point-accuracy-and-consistency","text":"FKPM enables what-if analyses orders of magnitude faster than traditional climate models Identify Koopman modes with exponential dynamics (likely to cause runaway behavior) Identify bifurcation by tracking the Koopman eigenvalues Leverage FKPM rapid what-if analyses to identify causal variables that experience runaway dynamics directly Given initial conditions and forcing terms, identify point in time where a bounded control is unable to counteract runaway dynamics Generating a metric to evaluate HAIKU\u2019s ability to accurately predict tipping points is perhaps the most challenging aspect of metric definition. We don\u2019t necessarily have direct observations of tipping points in our observational or simulated data. Identification of key locations and variables driving tipping points will be quantified, but cannot necessarily be verified directly. Specifically, we identify bifurcation by tracking the Koopman eigenvalues and the corresponding Koopman modes; what spatial location and which variables will experience tipping points? We then track the total number and through interactions with climate scientists, how many lead to useful insights or actions. Quantitative metrics are preferred, so we also aim to verify the accuracy of as many proposed tipping points as possible. We can quantify a stochastic (systematic) uncertainty in the tipping point by measuring the magnitude and causal thresholds that lead to the tipping point across several FKPM trained from data generated with different initial values (configurations) of the CESM. For an FKPM trained on climate simulation data, we can go back to the original simulation to verify if a tipping point is present. The FKPM allows us to sample parameter space much more rapidly and the Koopman mode analysis also allows us to identify potential areas to explore. Once we\u2019ve identified potential conditions that trigger a tipping point using our Analysis Toolkit, we return to the original simulations and verify if the predicted tipping point is present in the dynamics of the simulation. This Tipping Point accuracy is the fraction of verified tipping points over the total number of proposed tipping points. Equation 4: Metric to estimate accuracy of tipping points Where VTP (verified tipping point) is 0 if the tipping point is not verified on the current FKPM and 1 if it is. We then range over N FKPMs and over M identified tipping points. Our currently selected observational data doesn\u2019t have large scale tipping points, so as of now, this analysis is restricted to simulated dynamics. But as with our causal analysis accuracy, we expect that the capability of FKPM to model simulated climate models will be similar to its ability to model observational data. And as such, the Tipping Point Accuracy measured on simulated data should be indicative of that on observational data. Additionally, if a specific tipping point is present in several FKPMs derived across a variety of simulation parameters (high tipping point accuracy) and the accuracy of those FKPMs compared to the observational data is high (high model accuracy), we have reasonable support that this tipping point is properly modeled and is likely representative of a tipping point present in the real earth system.","title":"Tipping Point Accuracy and Consistency"},{"location":"software_framework/","text":"Software Framework This is a summary of the structure of the python-based HAIKU software system currently in development. As the system is developed, a beta version will be available on our public github page . This page will include steps required to download and preprocess training data, and to get HAIKU operational on your system. * classes and member functions are denoted as such section. Overall structure We generate a climate_data object that can reads in CESM, NSIDC, or Koopman generated data and converts them all to consistent representations (the same coordinate grid and sets of variables) while storing the provenance as a member. We have a generic parameters object that stores any relevant configuration data or other parameters needed in later processing or analysis. For the climate_data object, this includes this like provenance and time range. Figure 1: Main classes in the planned HAIKU software system. The koopman_model class contains a trained Koopman model and all functions necessary for instantiation, training, and prediction. The local parameters member stores information about the training parameters and any information necessary to properly use the koopman_model object. During training, it takes a single climate_data object and learns the dynamics of this system. The koopman_model object can then be used to generate climate_data with a range of parameters. Figure 2: The HAIKU framework ingests data and generates a series of models to enable Tipping Point and other analytics on the climate system. Finally, the koopman_model itself or the time-series data contained in a climate_data object can be passed into the Analytics Toolkit. A causal_model object is instantiated and can learn a causal structure from time-series data ( climate_data object) using its internal methods or from the structure of the koopman_model itself. Similarly, the causal_model , climate_data , or koopman_model objects are used as input to different tipping-point analyses inside the toolkit. Figure 3: Leveraging the generated models and time-series data, several analyses are enabled in the Analytics Toolkit. Rounding out the system, there are a variety of metrics that are evaluated either as member functions of the systems or as standalone code. Climate Data The climate_data class instantiates a time-series member by reading in CESM, NSIDC, or Koopman generated time-series data and converting it to consistent representations (the same coordinate grid and sets of variables) while storing all relevant parameters as a member parameters . The time-series data is stored in a numpy array and is by default monthly data, polar gridded, climate variable data. It has internal functions to convert between polar and lat-lon coordinates, to interpolate missing datapoints, and to produce time-series matching the lifted Koopman observables (given a koopman_model ). The climate_data also has a some plotting methods to investigate visually the temporal and spatial behavior of the data. The time-series itself is a time-series of a much smaller dictionary, climate_state which is an array holding the values for climate variables as defined by the gridding of the climate_data . parameters . Koopman Models The koopman_model class contains a trained Koopman model and all functions necessary for instantiation, training, and prediction of the Koopman model on climate_data time-series. Several model hyperparameters are set at instantiation by default in the koopman_model . parameters object. The model is trained through the koopman_model . train( climate_data ) function. The koopman_model has a member function, koopman_model . predict_state( climate_state :x,dt) , which returns the predicted climate_state after the koopman_model has run the original state, x, forward by time dt. This function lifts the original climate state into the Koopman Observables space before propagating the state forward using matrix multiplication, reversing the lifting function, and producing the predicted state in the original climate_state format. There is an associated function for bulk processing of the koopman_model . predict_state() function which can provide a full climate_data object as output. This is more commonly used in most analytics. Currently, the lifting function is a relatively straightforward aggregation of the climate_data , but we are investigating other approaches as the development continues. The koopman_model also has external plotting functions to summarize the model structure including plots of eigenfunctions of selected modes and the distribution of eigenvalues for the koopman_model . The forecasting done by the Koopman Models enables the Analytics Toolkit or can produce stand-alone climate forecasts for public consumption. Hybrid Modeling We're still designing the structure of the Hybrid Koopman-Climate Model (HKPM) implementation. For the scope of this project we intend to apply a correction on top of pregenerated data from CESM or another climate model rather than running the full CESM climate model locally and applying the correction in place. This will likely be sufficient to test the HKCM as a proof-of-concept. The HKPM itself is the correction to apply at each time-step of a climate model. Input to this system are two climate_data time-series with the same variables and over the same time-period. A koopman_model object is trained on each of the climate_data objects constraining them to have the same eigenvalues so that they can be compared directly to one another. The final result is a koopman_model which is the difference of these two. This koopman_model can then be used directly to provide a correction factor to climate_data used as input through the koopman_model . predict_state() function. Alternatively, it enables analytics (currently done manually) to better understand the causal differences between the two models. It is possible to generate a causal_model object from this data, which may further enable understanding of the physical difference between the original datasets, but further study is required. Causal Model This class requires climate_data as well as its own member parameters (which helps define variable transformation from more fine-grained to user oriented causal variables). The causal_model ._transform_data( climate_data ) function generates a user oriented climate_data time-series with many fewer variables. This time-series can then be used as input to train the causal_model where it uses pairwise Granger Causality coupled with LASSO to limit number of edges, remove edges explained by other pathways. This causal_model can then be viewed via a causal_model . print() method. Other analytics are still being considered that may do things like allow a user to request the variable or pathway with the greatest impact on another variable. Analytics Toolkit The initial implementation of the analysis_toolkit hinges around the causal_model class. The analysis_toolkit class is envisioned to hold many various analysis method, but not to hold any objects itself. Figure 3: Leveraging the generated models and time-series data, several analyses are enabled in the Analytics Toolkit.","title":"Software Framework"},{"location":"software_framework/#software-framework","text":"This is a summary of the structure of the python-based HAIKU software system currently in development. As the system is developed, a beta version will be available on our public github page . This page will include steps required to download and preprocess training data, and to get HAIKU operational on your system. * classes and member functions are denoted as such section. Overall structure We generate a climate_data object that can reads in CESM, NSIDC, or Koopman generated data and converts them all to consistent representations (the same coordinate grid and sets of variables) while storing the provenance as a member. We have a generic parameters object that stores any relevant configuration data or other parameters needed in later processing or analysis. For the climate_data object, this includes this like provenance and time range. Figure 1: Main classes in the planned HAIKU software system. The koopman_model class contains a trained Koopman model and all functions necessary for instantiation, training, and prediction. The local parameters member stores information about the training parameters and any information necessary to properly use the koopman_model object. During training, it takes a single climate_data object and learns the dynamics of this system. The koopman_model object can then be used to generate climate_data with a range of parameters. Figure 2: The HAIKU framework ingests data and generates a series of models to enable Tipping Point and other analytics on the climate system. Finally, the koopman_model itself or the time-series data contained in a climate_data object can be passed into the Analytics Toolkit. A causal_model object is instantiated and can learn a causal structure from time-series data ( climate_data object) using its internal methods or from the structure of the koopman_model itself. Similarly, the causal_model , climate_data , or koopman_model objects are used as input to different tipping-point analyses inside the toolkit. Figure 3: Leveraging the generated models and time-series data, several analyses are enabled in the Analytics Toolkit. Rounding out the system, there are a variety of metrics that are evaluated either as member functions of the systems or as standalone code.","title":"Software Framework"},{"location":"software_framework/#climate-data","text":"The climate_data class instantiates a time-series member by reading in CESM, NSIDC, or Koopman generated time-series data and converting it to consistent representations (the same coordinate grid and sets of variables) while storing all relevant parameters as a member parameters . The time-series data is stored in a numpy array and is by default monthly data, polar gridded, climate variable data. It has internal functions to convert between polar and lat-lon coordinates, to interpolate missing datapoints, and to produce time-series matching the lifted Koopman observables (given a koopman_model ). The climate_data also has a some plotting methods to investigate visually the temporal and spatial behavior of the data. The time-series itself is a time-series of a much smaller dictionary, climate_state which is an array holding the values for climate variables as defined by the gridding of the climate_data . parameters .","title":"Climate Data"},{"location":"software_framework/#koopman-models","text":"The koopman_model class contains a trained Koopman model and all functions necessary for instantiation, training, and prediction of the Koopman model on climate_data time-series. Several model hyperparameters are set at instantiation by default in the koopman_model . parameters object. The model is trained through the koopman_model . train( climate_data ) function. The koopman_model has a member function, koopman_model . predict_state( climate_state :x,dt) , which returns the predicted climate_state after the koopman_model has run the original state, x, forward by time dt. This function lifts the original climate state into the Koopman Observables space before propagating the state forward using matrix multiplication, reversing the lifting function, and producing the predicted state in the original climate_state format. There is an associated function for bulk processing of the koopman_model . predict_state() function which can provide a full climate_data object as output. This is more commonly used in most analytics. Currently, the lifting function is a relatively straightforward aggregation of the climate_data , but we are investigating other approaches as the development continues. The koopman_model also has external plotting functions to summarize the model structure including plots of eigenfunctions of selected modes and the distribution of eigenvalues for the koopman_model . The forecasting done by the Koopman Models enables the Analytics Toolkit or can produce stand-alone climate forecasts for public consumption.","title":"Koopman Models"},{"location":"software_framework/#hybrid-modeling","text":"We're still designing the structure of the Hybrid Koopman-Climate Model (HKPM) implementation. For the scope of this project we intend to apply a correction on top of pregenerated data from CESM or another climate model rather than running the full CESM climate model locally and applying the correction in place. This will likely be sufficient to test the HKCM as a proof-of-concept. The HKPM itself is the correction to apply at each time-step of a climate model. Input to this system are two climate_data time-series with the same variables and over the same time-period. A koopman_model object is trained on each of the climate_data objects constraining them to have the same eigenvalues so that they can be compared directly to one another. The final result is a koopman_model which is the difference of these two. This koopman_model can then be used directly to provide a correction factor to climate_data used as input through the koopman_model . predict_state() function. Alternatively, it enables analytics (currently done manually) to better understand the causal differences between the two models. It is possible to generate a causal_model object from this data, which may further enable understanding of the physical difference between the original datasets, but further study is required.","title":"Hybrid Modeling"},{"location":"software_framework/#causal-model","text":"This class requires climate_data as well as its own member parameters (which helps define variable transformation from more fine-grained to user oriented causal variables). The causal_model ._transform_data( climate_data ) function generates a user oriented climate_data time-series with many fewer variables. This time-series can then be used as input to train the causal_model where it uses pairwise Granger Causality coupled with LASSO to limit number of edges, remove edges explained by other pathways. This causal_model can then be viewed via a causal_model . print() method. Other analytics are still being considered that may do things like allow a user to request the variable or pathway with the greatest impact on another variable.","title":"Causal Model"},{"location":"software_framework/#analytics-toolkit","text":"The initial implementation of the analysis_toolkit hinges around the causal_model class. The analysis_toolkit class is envisioned to hold many various analysis method, but not to hold any objects itself. Figure 3: Leveraging the generated models and time-series data, several analyses are enabled in the Analytics Toolkit.","title":"Analytics Toolkit"},{"location":"Results/initial_motivation_results/","text":"Preliminary results from Simple Fast Koopman Proxy Model We are initially investigating the simulation data from the CESM1 Large Ensemble Community Project (LENS) as well as NSIDC data that covers the years 1979-2020. When evaluating accuracy of climate forecasting, training and testing occur in separate 4 year windows: 1997-2000,2001-2004 respectively. All results shown here are of a FKPM that only models the dynamics of the Sea Ice levels provided as output from the full CESM1 simulation. This means that we cannot extract causality or execute any what-if analyses outside of self-coupling of sea-ice concentration to itself, but those external forcing functions are represented intrinsically in the output of the CESM1 simulation output. Proof of concept for IDing Modes of interest The lifting function and eigenfunctions of the Koopman Mode Decomposition currently used in the system is straigtforward to visualize. The FKPM learns spatial weights for each element through fitting the dynamical system. By identifying eigenvalues of interest, exponential modes with decadal time-scales and large coefficients, we can find spatial regions that may experience rapid ice loss. Training a FKPM on NSIDC Sea Ice Concentration (ICEFRAC) data, we are able to identify spatial regions that experience rapid ice loss as seen in Figure 1. A region of interest is highlighted in the Barents and Kara seas as having a large components of rapid exponential sea ice loss. Figure 1: Example eigenfunctions for exponentially decaying Koopman modes in North (left) and left (right) hemispheres. This FKPM was trained using NSIDC data (sea ice concentration only) from 1979-2020. The FKPM generated only through Sea Ice Concentration time-series data are insufficient to capture all the relevant climate dynamics, so the above analysis should be considered a proof of concept. Accuracy of FKPMs Figure 2: The Koopman Mode Decomposition allows us to plot each separately and remove Mean and Annual modes for later analyses at any point during analysis. Two FKPM were trained on NSIDC (left) and CESM1 ensemble (right) data from 1979-2020. The two most prominent NSIDC Mean modes (left-most) can be compared to the two most prominent CESM Mean modes(middle-right) while the two most prominent NSIDC annual modes (middle-left) can be compared to the two most prominent CESM annual modes (right-most). We see that the extent of the eigenfunctions for Mean and Annual modes are qualitatively similar between a CESM-based and NSIDC-based FKPMs. Additionally, the regions of high annual variance are highlighted as expected in the annual mode eigenfunctions, while the regions of highest sea-ice concentration are highlighted in the mean mode eigenfunctions. This all matches expectation and shows that qualitatively, the FKPM are able to capture the more well-behaved dynamics of the system. Next we move to a more quantitative analysis looking at the accuracy of FKPM trained on NSIDC data. Figure 3: A FKPM was trained on monthly NSIDC (sea ice concentration only) data from 1997-2000. The Koopman model was then run foreward to forecast monthly predictions from 2001-2004. The pointwise RMSE of the FKPM (blue), CESM1 (orange), and climatalogical mean (green) were then computed from the observed monthly NSIDC data. We see that the FKPM trained only on Sea Ice data seems to mirror the climatological mean, while remaining slightly worse. The CESM1 model is generally not used for the purpose of month-month prediction, but it is worth noting that the relative cycles of error for the CESM1 simulation opposes those of the FKPM and climatalogical mean. This hints both the NSIDC based FKPM and the CESM1 may be good candidates for a hybrid model. It is unsurprising that the Sea Ice Concentration only FKPM would provide similar performance to the climatological mean. In essence, it forecasts based solely on the recent Sea Ice concentration and is unaware of other casual climate variables whose variance will impact Sea Ice levels directly. In order to improve the accuracy of the HAIKU system, we must include additional climate variables into the FKPM. Additional climate variables improve model accuracy We continue the development of the HAIKU system by including additional climate variables in the FKPM training. In particular, we include: Sea Ice Concentration, Sea Surface Temperature, and Atmoshperic Surface Temperature. These generally improve the performance of the models and we plan to investigate the inclusion of additional variables (eg. 3D gridded atmospheric temperature, atmospheric C02). First, we train an FKPM with all three of these inputs for CESM1 data and observed data and compare to make sure the FKPM is providing qualitatively reasonable output. The mean modes are plotted in Figure 4 and match expectation for the typical average values of these variables across the training timespan. Figure 4: The Mean eigenfunctions are summed and visualized for the CESM1-based FKPM (top) and the observational-based FKPM (bottom). The results are qualitatively similar and also match physical expectations for annual variance of these variables. The annual modes are shown in Figure 5 and match expectation for the typical annual fluctuation of these variables across the training timespan. Figure 5: The annual eigenfunctions are summed and visualized for the CESM1-based FKPM (top) and the observational-based FKPM (bottom). The results are qualitatively similar and also match physical expectations for annual variance of these variables. We have preliminary evidence that the FKPM is accurately modeling the new climate variables and now want to quantitatively assess how much additional prediction power or modeling accuracy we gain by the inclusion of these variables. The RMSE is computed between the monthly predictions of various models and the NSIDC monthly sea ice concentration data in Figure 6. Figure 6: Four FKPM were trained with differing sets of input variables (from observational data) and the pointwise RMSE of monthly Sea Ice concentration is shown (blue) compared to CESM1 data (orange) and the climatalogical mean (green). We see an accuracy gain when including ORAS5 Atmoshperic Temperature (right), but not when including ERA5 Sea Surface Temperature (bottom) compared to Sea Ice alone (top-left). From this result, it is clear that the the FKPM becomes more accurate with the inclusion of Atmospheric temperature. We speculate that the Sea Surface temperature has little positive impact because the ERA5 Sea Surface Temperature data is known to be fairly spotty. Further analysis will leverage CESM1-based analysis to sea if more accurate Sea Surface data could improve the accuracy of these models. This will be a nice proof of concept for our Phase II approach to identify new measurements that could improve the accuracy of models built from observational data. Next Steps Inclusion of just one additional variable has brought the FKPM monthly accuracy up to the level of the climatalogical mean. We plan to test the addition of a few new variables to get generate a more accurate model on a monthly timescale. Additionally, we will present accuracy measurements on longer timescales to more directly compare the climatalogical accuracy and compare directly to the CESM model for identifying long-term Sea Ice Trends. We expect that some tuning of the Koopman model itself will be involved (such as modifying the lifting functions or adding physical restrictions to the eigenfunctions and eigenvalues representing real physics interaction limitations.) Early summaries of causal models using the updated FKPM will come as well, allowing for further validation of the approach and the relevance of the produced models. We also plan to produce the first results of the Hybrid Koopman Proxy Model to verify that the approach described in section X can improve accuracy over the climate model itself (eg. CESM1).","title":"Initial Results"},{"location":"Results/initial_motivation_results/#preliminary-results-from-simple-fast-koopman-proxy-model","text":"We are initially investigating the simulation data from the CESM1 Large Ensemble Community Project (LENS) as well as NSIDC data that covers the years 1979-2020. When evaluating accuracy of climate forecasting, training and testing occur in separate 4 year windows: 1997-2000,2001-2004 respectively. All results shown here are of a FKPM that only models the dynamics of the Sea Ice levels provided as output from the full CESM1 simulation. This means that we cannot extract causality or execute any what-if analyses outside of self-coupling of sea-ice concentration to itself, but those external forcing functions are represented intrinsically in the output of the CESM1 simulation output.","title":"Preliminary results from Simple Fast Koopman Proxy Model"},{"location":"Results/initial_motivation_results/#proof-of-concept-for-iding-modes-of-interest","text":"The lifting function and eigenfunctions of the Koopman Mode Decomposition currently used in the system is straigtforward to visualize. The FKPM learns spatial weights for each element through fitting the dynamical system. By identifying eigenvalues of interest, exponential modes with decadal time-scales and large coefficients, we can find spatial regions that may experience rapid ice loss. Training a FKPM on NSIDC Sea Ice Concentration (ICEFRAC) data, we are able to identify spatial regions that experience rapid ice loss as seen in Figure 1. A region of interest is highlighted in the Barents and Kara seas as having a large components of rapid exponential sea ice loss. Figure 1: Example eigenfunctions for exponentially decaying Koopman modes in North (left) and left (right) hemispheres. This FKPM was trained using NSIDC data (sea ice concentration only) from 1979-2020. The FKPM generated only through Sea Ice Concentration time-series data are insufficient to capture all the relevant climate dynamics, so the above analysis should be considered a proof of concept.","title":"Proof of concept for IDing Modes of interest"},{"location":"Results/initial_motivation_results/#accuracy-of-fkpms","text":"Figure 2: The Koopman Mode Decomposition allows us to plot each separately and remove Mean and Annual modes for later analyses at any point during analysis. Two FKPM were trained on NSIDC (left) and CESM1 ensemble (right) data from 1979-2020. The two most prominent NSIDC Mean modes (left-most) can be compared to the two most prominent CESM Mean modes(middle-right) while the two most prominent NSIDC annual modes (middle-left) can be compared to the two most prominent CESM annual modes (right-most). We see that the extent of the eigenfunctions for Mean and Annual modes are qualitatively similar between a CESM-based and NSIDC-based FKPMs. Additionally, the regions of high annual variance are highlighted as expected in the annual mode eigenfunctions, while the regions of highest sea-ice concentration are highlighted in the mean mode eigenfunctions. This all matches expectation and shows that qualitatively, the FKPM are able to capture the more well-behaved dynamics of the system. Next we move to a more quantitative analysis looking at the accuracy of FKPM trained on NSIDC data. Figure 3: A FKPM was trained on monthly NSIDC (sea ice concentration only) data from 1997-2000. The Koopman model was then run foreward to forecast monthly predictions from 2001-2004. The pointwise RMSE of the FKPM (blue), CESM1 (orange), and climatalogical mean (green) were then computed from the observed monthly NSIDC data. We see that the FKPM trained only on Sea Ice data seems to mirror the climatological mean, while remaining slightly worse. The CESM1 model is generally not used for the purpose of month-month prediction, but it is worth noting that the relative cycles of error for the CESM1 simulation opposes those of the FKPM and climatalogical mean. This hints both the NSIDC based FKPM and the CESM1 may be good candidates for a hybrid model. It is unsurprising that the Sea Ice Concentration only FKPM would provide similar performance to the climatological mean. In essence, it forecasts based solely on the recent Sea Ice concentration and is unaware of other casual climate variables whose variance will impact Sea Ice levels directly. In order to improve the accuracy of the HAIKU system, we must include additional climate variables into the FKPM.","title":"Accuracy of FKPMs"},{"location":"Results/initial_motivation_results/#additional-climate-variables-improve-model-accuracy","text":"We continue the development of the HAIKU system by including additional climate variables in the FKPM training. In particular, we include: Sea Ice Concentration, Sea Surface Temperature, and Atmoshperic Surface Temperature. These generally improve the performance of the models and we plan to investigate the inclusion of additional variables (eg. 3D gridded atmospheric temperature, atmospheric C02). First, we train an FKPM with all three of these inputs for CESM1 data and observed data and compare to make sure the FKPM is providing qualitatively reasonable output. The mean modes are plotted in Figure 4 and match expectation for the typical average values of these variables across the training timespan. Figure 4: The Mean eigenfunctions are summed and visualized for the CESM1-based FKPM (top) and the observational-based FKPM (bottom). The results are qualitatively similar and also match physical expectations for annual variance of these variables. The annual modes are shown in Figure 5 and match expectation for the typical annual fluctuation of these variables across the training timespan. Figure 5: The annual eigenfunctions are summed and visualized for the CESM1-based FKPM (top) and the observational-based FKPM (bottom). The results are qualitatively similar and also match physical expectations for annual variance of these variables. We have preliminary evidence that the FKPM is accurately modeling the new climate variables and now want to quantitatively assess how much additional prediction power or modeling accuracy we gain by the inclusion of these variables. The RMSE is computed between the monthly predictions of various models and the NSIDC monthly sea ice concentration data in Figure 6. Figure 6: Four FKPM were trained with differing sets of input variables (from observational data) and the pointwise RMSE of monthly Sea Ice concentration is shown (blue) compared to CESM1 data (orange) and the climatalogical mean (green). We see an accuracy gain when including ORAS5 Atmoshperic Temperature (right), but not when including ERA5 Sea Surface Temperature (bottom) compared to Sea Ice alone (top-left). From this result, it is clear that the the FKPM becomes more accurate with the inclusion of Atmospheric temperature. We speculate that the Sea Surface temperature has little positive impact because the ERA5 Sea Surface Temperature data is known to be fairly spotty. Further analysis will leverage CESM1-based analysis to sea if more accurate Sea Surface data could improve the accuracy of these models. This will be a nice proof of concept for our Phase II approach to identify new measurements that could improve the accuracy of models built from observational data.","title":"Additional climate variables improve model accuracy"},{"location":"Results/initial_motivation_results/#next-steps","text":"Inclusion of just one additional variable has brought the FKPM monthly accuracy up to the level of the climatalogical mean. We plan to test the addition of a few new variables to get generate a more accurate model on a monthly timescale. Additionally, we will present accuracy measurements on longer timescales to more directly compare the climatalogical accuracy and compare directly to the CESM model for identifying long-term Sea Ice Trends. We expect that some tuning of the Koopman model itself will be involved (such as modifying the lifting functions or adding physical restrictions to the eigenfunctions and eigenvalues representing real physics interaction limitations.) Early summaries of causal models using the updated FKPM will come as well, allowing for further validation of the approach and the relevance of the produced models. We also plan to produce the first results of the Hybrid Koopman Proxy Model to verify that the approach described in section X can improve accuracy over the climate model itself (eg. CESM1).","title":"Next Steps"},{"location":"Results/results_Milestone_3/","text":"Preliminary results from Simple Fast Koopman Proxy Model We\u2019re initially investigating the simulation data from the CESM1 Large Ensemble Community Project. Due to the highly chaotic dynamics of the climate model, small differences in initial conditions lead to vastly different behaviors. The ensemble project simulates CESM1 using a constant set of parameters and forcing inputs across all runs. The only difference between different ensemble members are perturbations (at round-off error magnitude) on the initial conditions. One benefit to the Koopman Mode Decomposition is that while these perturbations can lead to large differences in observable values at a given time-step, they should be treated as noise from the perspective of FKPM. We expect to maintain good accuracy and to get very similar coefficients for the FKPM trained across each of the ensembles. All results shown here are of a FKPM that only models the dynamics of the Sea Ice levels provided as output from the full CESM1 simulation. This means that we cannot extract causality or execute any what-if analyses outside of self-coupling of sea-ice concentration to itself, but those external forcing functions are represented intrinsically in the output of the CESM1 simulation output. Before moving to simulations from the CESM1 Large Ensemble Community Project, we perform KMD on a control run that uses constant forcing inputs (instead of the observed historical forcing values). The mean and annual Koopman modes are shown in Figure 1. These control simulations do not rely on historical data for forcing inputs and can therefore be simulated for long time horizons. Figure 1: Mean (left) and annual (right) Koopman modes obtained from performing KMD on a control run from 1979-2021 in the northern hemisphere. Figure 2 shows the mean and annual Koopman modes obtained from performing KMD on CESM1 simulation runs #001 and #105 with historical forcing. Koopman models are produced for each ensemble member, while there are some differences in the spectral modes presented, the overall picture is quite similar between the two. The standard deviations of the mean and annual modes are shown in Figure 3. We can see where bias from a specific ensemble selection may come in while training an FKPM. Figure 2: Mean (left) and annual (right) Koopman modes obtained from performing KMD on CESM1 simulations with historical forcing from 1979-2021 in the northern hemisphere. Two members were selected to show typical differences: the top plots show results from member #001 and the bottom plots show results from member #105. Figure 3: Standard deviation of the mean (left) and annual (right) Koopman modes obtained from CESM1 simulations with historical forcing between all ensemble members. Next steps for this preliminary analysis include: comparing FKPMs trained on observational data to CESM1 simulation data which should give a handle on how much we can learn about dynamics that are not explicitly modeled in the CESM1 simulation and thus how much accuracy/precision gain we may get by training the HKCM. Then we\u2019ll begin analyses that include more observable features and begin some what-if experimentation with ensemble of FKPMs.","title":"results Milestone 3"},{"location":"Results/results_Milestone_3/#preliminary-results-from-simple-fast-koopman-proxy-model","text":"We\u2019re initially investigating the simulation data from the CESM1 Large Ensemble Community Project. Due to the highly chaotic dynamics of the climate model, small differences in initial conditions lead to vastly different behaviors. The ensemble project simulates CESM1 using a constant set of parameters and forcing inputs across all runs. The only difference between different ensemble members are perturbations (at round-off error magnitude) on the initial conditions. One benefit to the Koopman Mode Decomposition is that while these perturbations can lead to large differences in observable values at a given time-step, they should be treated as noise from the perspective of FKPM. We expect to maintain good accuracy and to get very similar coefficients for the FKPM trained across each of the ensembles. All results shown here are of a FKPM that only models the dynamics of the Sea Ice levels provided as output from the full CESM1 simulation. This means that we cannot extract causality or execute any what-if analyses outside of self-coupling of sea-ice concentration to itself, but those external forcing functions are represented intrinsically in the output of the CESM1 simulation output. Before moving to simulations from the CESM1 Large Ensemble Community Project, we perform KMD on a control run that uses constant forcing inputs (instead of the observed historical forcing values). The mean and annual Koopman modes are shown in Figure 1. These control simulations do not rely on historical data for forcing inputs and can therefore be simulated for long time horizons. Figure 1: Mean (left) and annual (right) Koopman modes obtained from performing KMD on a control run from 1979-2021 in the northern hemisphere. Figure 2 shows the mean and annual Koopman modes obtained from performing KMD on CESM1 simulation runs #001 and #105 with historical forcing. Koopman models are produced for each ensemble member, while there are some differences in the spectral modes presented, the overall picture is quite similar between the two. The standard deviations of the mean and annual modes are shown in Figure 3. We can see where bias from a specific ensemble selection may come in while training an FKPM. Figure 2: Mean (left) and annual (right) Koopman modes obtained from performing KMD on CESM1 simulations with historical forcing from 1979-2021 in the northern hemisphere. Two members were selected to show typical differences: the top plots show results from member #001 and the bottom plots show results from member #105. Figure 3: Standard deviation of the mean (left) and annual (right) Koopman modes obtained from CESM1 simulations with historical forcing between all ensemble members. Next steps for this preliminary analysis include: comparing FKPMs trained on observational data to CESM1 simulation data which should give a handle on how much we can learn about dynamics that are not explicitly modeled in the CESM1 simulation and thus how much accuracy/precision gain we may get by training the HKCM. Then we\u2019ll begin analyses that include more observable features and begin some what-if experimentation with ensemble of FKPMs.","title":"Preliminary results from Simple Fast Koopman Proxy Model"}]}